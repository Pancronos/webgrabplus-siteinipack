**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: magentatv.mk
* @MinSWversion: V5.1.4
* @Revision 2 - [04/05/2025] Mat8861
* @Revision 1 - [13/02/2024] Blackbear199
*  - url index change
* @Revision 0 - [11/02/2024] Blackbear199
*  - creation
* @Remarks: V5.1.4 or later needed
* @header_end
**------------------------------------------------------------------------------------------------
site {url=magentatv.pl|timezone=UTC|maxdays=6|cultureinfo=pl-PL|charset=utf-8|titlematchfactor=10}
site {ratingsystem=PL|episodesystem=onscreen|retry=<retry channel-delay="1" index-delay="1" time-out="20">4</retry>}}
*
scope.range {(urlindex)|end}
url_index {url|https://www.magentatv.pl/epg}
url_index.headers {method=POST_BACK(GET,GET)}
url_index.headers {customheader=app_key='global_temp_1'}
url_index.headers {customheader=app_version=02.0.1010}
url_index.headers {customheader=device-id='global_temp_3'}
url_index.headers {customheader=X-Request-Tracking-Id=e2ecf250-c831-4a74-8745-c6d0431ccc28}
url_index.headers {customheader=X-User-Agent=web\|web\|Chrome-129\|02.0.1010\|1}
url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
global_temp_1.scrub {single|"CMS_CONFIGURATION_API_KEY":"||"|"}
global_temp_2.scrub {single|"NATCO_KEY":"||"|"}
global_temp_3.scrub {single|"DEVICE_ID":"||"|"}
*
global_temp_4.modify {substring(type=regex)|'config_site_id' "^(\d+)##"}
global_temp_5.modify {substring(type=regex)|'config_site_id' "^\d+##(\d+)#"}
global_temp_6.modify {substring(type=regex)|'config_site_id' "^\d+##\d+##(.*?)$"}
end_scope
*
scope.range {(postback)|end}
url_index.modify {set|https://tv-pl-prod.yo-digital.com/pl-bifrost/epg/channel/schedules/v2?date='urldate'&hour_offset='subpage'&hour_range=3&filler=true&channel_numbers='global_temp_4'&station_ids='global_temp_5'&app_language=pl&natco_code=pl}
end_scope
*
urldate.format {datestring|yyyy-MM-dd}
subpage.format {list|0|3|6|9|12|15|18|21}
*
index_urlchannellogo.modify {set|https://tv-pl-prod.yo-digital.com/prod/images/logos/'global_temp_6'}
*
*
index_showsplit.scrub {regex||"channels":{"'global_temp_5'":\[(.*?)\]\},"cache_ttl"||}
scope.range {(splitindex)|end}
index_showsplit.modify{substring(type=regex)|"\{"program_id"[^"]*".*?\}"}
index_temp_3.modify {substring(type=regex)|'index_showsplit' "\"start_time\":\"([^\"]*)"}
index_temp_3.modify {cleanup(removeduplicates link="index_showsplit")}
index_showsplit.modify {cleanup(style=jsondecode)}
end_scope
*
index_start.scrub {single|"start_time":"||Z"|Z"}
index_stop.scrub {single|"end_time":"||Z"|Z"}
index_title.scrub {single|"description":"||","|","}
index_subtitle.scrub {single(exclude="Sezon ")|"episode_name":"||",|",}
index_productiondate.scrub {single|"release_year":||,|,}
index_category.scrub {multi(max=2)|"genres":[|"name":"|"|]}
index_category.modify{cleanup(style=name)}
index_rating.scrub {regex||"ratings":"([1-9]\d*[^"]*)||}
index_episode.scrub {regex(pattern="S'S1' E'E1'""S'S1'""E'E1'")||"season_display_number":"(?:Sezon\s*)?([1-9]\d*)"||}
index_temp_1.scrub {single|"program_id":"||"|"}
index_temp_2.scrub {regex||"episode_number":"([1-9]\d*)"||}
*
index_episode.modify {clear(> "1000")}
index_episode.modify {addstart(not "")|S}
index_episode.modify {addend('index_temp_2' not "")|E'index_temp_2'}
*
index_urlshow.modify {addstart('index_temp_1' not "")|https://tv-pl-prod.yo-digital.com/pl-bifrost/details/program/'index_temp_1'?natco_key='global_temp_2'&interacted_with_nPVR=false&app_language=pl&natco_code=pl}
index_urlshow.headers {customheader=app_key='global_temp_1'}
index_urlshow.headers {customheader=app_version=02.0.1010}
index_urlshow.headers {customheader=device-id='global_temp_3'}
index_urlshow.headers {customheader=X-Request-Tracking-Id=e2ecf250-c831-4a74-8745-c6d0431ccc28}
index_urlshow.headers {customheader=X-User-Agent=web\|web\|Chrome-129\|02.0.1010\|1}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate,br}
*
title.modify {addstart|'index_title'}
description.scrub {single|"details":{|"description":"|","|","} 
director.scrub {multi|{"role_name":"Re≈ºyser","person_id":"|"person_name":"|","|}}
actor.scrub {multi(max=10)|{"role_name":"Aktor","person_id":"|"person_name":"|","|}}
presenter.scrub {multi(max=2)|{"role_name":"Prezenter","person_id":"|"person_name":"|","|}}
producer.scrub {multi(max=4)|{"role_name":"Producent","person_id":"|"person_name":"|","|}}
writer.scrub {multi(max=4)|{"role_name":"Scenarzysta","person_id":"|"person_name":"|","|}}
composer.scrub {multi(max=4)|{"role_name":"muzyk","person_id":"|"person_name":"|","|}}
showicon.scrub {single|"poster_image_url":"||",|",}
*
description.modify {cleanup(style=jsondecode)}
description.modify {cleanup(style=jsondecode)} *do twice..double escapes
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*scope.range {(urlindex)|end}
*url_index {url|https://www.magentatv.pl/epg}
*url_index.headers {method=POST_BACK(GET,GET)}
*url_index.headers {customheader=app_key='global_temp_1'}
*url_index.headers {customheader=app_version=02.0.1010}
*url_index.headers {customheader=device-id='global_temp_3'}
*url_index.headers {customheader=X-User-Agent=web\|web\|Chrome-129\|02.0.1010\|1}
*url_index.headers {customheader=X-Request-Tracking-Id=e2ecf250-c831-4a74-8745-c6d0431ccc28}
*url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
*global_temp_1.scrub {single|"CMS_CONFIGURATION_API_KEY":"||"|"}
*global_temp_2.scrub {single|"NATCO_KEY":"||"|"}
*global_temp_3.scrub {single|"DEVICE_ID":"||"|"}
*end_scope
*scope.range {(postback)|end}
*url_index.modify {set|https://tv-pl-prod.yo-digital.com/pl-bifrost/epg/channel?channelMap_id=&includeVirtualChannels=true&natco_key='global_temp_2'&app_language=pl&natco_code=pl}
*end_scope
*subpage.format {list|}
*index_site_id.scrub {regex||"channel_number":(\d+,"station_id":"\d+".*?)","cta"||}
*index_site_channel.scrub {multi|"title":"||",|",}
*index_site_id.modify {replace|,"station_id":"|##}
*index_site_id.modify {replace(type=regex)|"^\d+##\d+(.*?logos\/)"|##}
*index_site_id.modify {cleanup(removeduplicates link="index_site_channel")}
** @auto_xml_channel_end
