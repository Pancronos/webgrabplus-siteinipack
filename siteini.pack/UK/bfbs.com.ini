**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: bfbs.com
* @MinSWversion: 5.1
*   none
* @Revision 1 - [06/04/2025] Mat8861
* @Revision 0 - [16/02/2011] Ben
*   none
* @Remarks:
*   7 days index page listing
* @header_end
**------------------------------------------------------------------------------------------------
site {url=bfbs.com|timezone=GMT|maxdays=7|cultureinfo=en-GB|charset=UTF-8|titlematchfactor=50} 
url_index{url|https://www.bfbs.com/tv/schedule.json?channel_filter[0]=|channel|&schedule&ts=##time##}
global_temp_1.modify {calculate( format=date,yyyy-MM-dd)|'urldate'}
global_temp_2.modify {calculate( format=date,unix)|'global_temp_1'}
global_temp_2.modify {calculate(format=date,unix)|60 -} 
url_index.modify {replace|##time##|'global_temp_2'}
scope.range{(splitindex)|end}
index_showsplit.scrub {multi|{"items":[||],"groups"|],"groups"}
index_showsplit.modify {replace|\},\{|\}\|\{}
index_showsplit.modify {cleanup(style=jsondecode)}
index_showsplit.modify {cleanup(style=htmldecodespecialchar)}
index_showsplit.modify {remove|\\n}
index_temp_1.modify {substring(type=regex)|'index_showsplit' "\"start\":(\d+)\","} 
index_temp_1.modify {cleanup(removeduplicates link="index_showsplit")}
**index_showsplit.modify {(debug)}
end_scope
index_start.scrub {single|<span class="schedule-time schedule-show-start|">|</span>|<span> - </span>}
index_stop.scrub {single|<span> - </span>|<span class="schedule-time schedule-show-start">|</span>|</div>}
index_title.scrub {single|<span class="schedule-show-name"|>|</span>|</span>}
index_description.scrub {single|<span class="schedule-show-description"|>|</span>|</span>}
index_subtitle.scrub {single(separator=": " exclude=last include=first)|<div class="content">|<p>|</p>|<br/>} 
*


** @auto_xml_channel_start
*url_index{url()|https://www.bfbs.com/tv/schedule.json?channels}
*index_site_channel.scrub {regex||\{"id":"\d+","content":"(.*?)\\n","order":\d+\}||}
*index_site_id.scrub {regex||\{"id":"(\d+)","content":".*?\\n","order":\d+\}||}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end