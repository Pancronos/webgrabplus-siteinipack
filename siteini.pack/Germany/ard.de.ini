**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: ard.de
* @MinSWversion: 5.1
* @Revision 0  - [22/05/2025] Mat8861
*   - creation
* @Remarks:
* @header_end         ~ 
**------------------------------------------------------------------------------------------------
site {url=ard.de|timezone=Europe/Berlin|maxdays=7|cultureinfo=de-DE|charset=UTF-8|titlematchfactor=20|ratingsystem=FSK|keepindexpage}
*site {episodesystem=xmltv_ns}
** 
urldate.format {datestring|yyyy-MM-dd}
global_temp_1.modify {set|'config_site_id'}
url_index{url|https://programm-api.ard.de/program/api/program?day=|urldate|}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}     * to speedup the downloading of the index pages
index_showsplit.scrub {regex()||\{"id":"'global_temp_1'","trackingPiano":.*?"timeSlots":\[\[(.*?)\]\],"crid":"||}
index_showsplit.modify{remove(type=regex)|\!\?\?\!}
index_showsplit.modify {replace|\},\{|\}\|\{}
index_showsplit.modify {cleanup(style=unidecode)}
index_showsplit.modify {cleanup(style=jsondecode)}
*index_showsplit.modify {(debug)}
index_start.scrub {single|"broadcastedOn":"||+|+}
*index_stop.scrub {single|"broadcastEnd":"||+|+}
index_title.scrub {single()|{"type":"application/vnd.ard.page+json","title":||","|","}
index_episode.modify {substring(type=regex pattern="S'S1'E'E1'""S'S1'/E'E1'""'E1'""'E1'/'Et1'")|'index_title' "\((S\d+(?:\/)?E\d+)\)\|\((\d+)\)\|\((\d+\/\d+)\)"}
index_title.modify{remove(type=regex)|"\(S\d+(?:\/)?E\d+\)\|\(\d+\)\|\(\d+\/\d+\)"}
index_productiondate.scrub {single(exclude="Moderation")|"coreSubline":"||",|",}
index_subtitle.scrub {single(exclude="Moderation")|"coreSubline":"||",|",}
index_rating.scrub {regex||"maturityContentRating":"FSK([1-9]\d+)"||} 
index_description.scrub {single|"synopsis":"||"|"}
index_description.modify {remove(type=regex)|^Themen:\\\n\*\s}
index_description.modify {replace(type=regex)|\\\n\*\s| }
index_description.modify {remove(type=regex)|^.*?\\\r\\\n\\\r\\\n}
index_description.modify {replace(type=regex)|\\\n| }
index_description.modify {replace(type=regex)|\\\r| }
index_subtitle.modify{remove(type=regex)|".*?\d{4}"}
index_country.scrub {regex(exclude="Moderation")||"coreSubline":".*?\s(.*?)\s\d{4}",||}
index_subtitle.modify{remove|'index_country''index_productiondate'}
index_presenter.scrub {multi(separator=",""und")|"coreSubline":"Moderation: ||",|",}
index_showicon.scrub {single|"src":"||",|",}
*
index_urlshow {url||"href":"||"|"}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate,br}
title.scrub {single|"title":"||",|",}
title.modify{remove(type=regex)|"\(S\d+(?:\/)?E\d+\)\|\(\d+\)\|\(\d+\/\d+\)"}
director.scrub {regex||{"name":"([^"]*)","type":"crew","role":"Regie","||}
actor.scrub {regex||{"name":"([^"]*","type":"cast","role":"[^"]*)","||}
actor.modify {substring(type=element)|0 10}
actor.modify {replace|","type":"cast","role":"|(role=}
actor.modify {addend(~ "role=")|)}
actor.modify {remove|(role=)}
presenter.scrub {regex||{"name":"([^"]*)","type":"host","role":"Moderation","||}
producer.scrub {single|"producerName":"||"|"}
writer.scrub {regex||{"name":"([^"]*)","type":"crew","role":"Drehbuch","||}
composer.scrub {regex||{"name":"([^"]*)","type":"crew","role":"Musik","||}
**
**
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start  
*url_index{url|https://programm-api.ard.de/program/api/program?day=|urldate|}
*url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
*index_site_channel.modify {replace|'|â€™}
*index_site_channel.scrub {regex()||"channel":{"id":"[^"]*","name":"([^"]*)","||}
*index_site_id.scrub {regex()||"channel":{"id":"([^"]*)","name":"[^"]*","||}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
