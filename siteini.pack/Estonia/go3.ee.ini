**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: go3.ee
* @MinSWversion: V5.1
* @Revision 0  - [24/04/2025] Mat8861
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=go3.ee|timezone=Europe/Tallinn|maxdays=7|cultureinfo=et-EE|charset=UTF-8|titlematchfactor=90}
*
scope.range {(urlindex)|end}
urldate.format {datestring|yyyy-MM-dd}
url_index {url()|https://go3.tv/api/products/lives/programmes?liveId[]=|channel|&since=|urldate|T00%3A00%2B0100&till=|urldate|T23%3A59%2B0100&platform=BROWSER&lang=EE&tenant=OM_EE}
url_index.headers {customheader=Accept-Encoding=gzip,deflate,br} *
url_index.headers {accept=text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9}
url_index.headers {customheader=Upgrade-Insecure-Requests=1}
url_index.headers {host=go3.ee} 
url_index.headers {customheader=sec-fetch-dest=document}
url_index.headers {customheader=Sec-Fetch-Site=none}
url_index.headers {customheader=Sec-Fetch-Mode=navigate}
url_index.headers {customheader=Sec-Fetch-User=?1}
url_index.headers {contenttype=null}
end_scope
*
scope.range {(splitindex)|end}
index_showsplit.scrub {multi||||}
index_showsplit.modify {cleanup(style=unidecode)}
index_showsplit.modify {cleanup(style=jsondecode)}
index_showsplit.modify {remove|\\n}
index_showsplit.modify {replace|\}][\{|\}]\|[\{}
index_showsplit.modify {replace(type=regex)|"\}(,)\{\"id\":\d+,\"(?:title\|active)\""|\|}
index_temp_1.modify {substring(type=regex)|'index_showsplit' "^.*?\"since\":\"([^\"]*)"}
index_temp_1.modify {cleanup(removeduplicates link="index_showsplit")}
index_showsplit.modify {sort(ascending,string)}
sort_by.scrub {single(target="index_showsplit")|"since":"||Z"|Z"}
sort_by.modify {calculate(target="index_showsplit" format=date,unix)}
**index_showsplit.modify {(debug)}
end_scope
*
index_start.scrub {single|"since":"||Z",|Z",}
index_stop.scrub {single|"till":"||Z",|Z",}
index_title.scrub {single|"title":"||","|","}
index_titleoriginal.scrub {single(lang=en)|"originalTitle":"||",|",}
*
index_description.scrub {single|"description":"||","|","}
index_description.modify {replace|\\"|"}
index_description.modify {cleanup(tags="<"">")}
index_premiere.scrub {regex||"premiere":(true),"||}
index_premiere.modify {addend|(lang=null)} 
index_rating.scrub {single|"rating":||,"}
index_category.scrub {multi(max=2)|"genres":[|"name":"|"|]}
index_showicon.scrub {single()|"mainUrl":"||"|"}
index_showicon.modify {addstart(not "")|https:}
index_showicon.modify {cleanup(style=urldecode)}
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url()|https://go3.tv/api/products/sections/live_tv?platform=BROWSER&lang=ET&tenant=OM_EE}
*url_index.headers {customheader=Accept-Encoding=gzip,deflate,br}
*index_site_channel.scrub {regex()||{"type_":"[^"]*","id":\d+,"externalUid":"[^"]*","title":"([^"]*)","slug":"[^"]*"||}
*index_site_id.scrub {regex()||{"type_":"[^"]*","id":(\d+),"externalUid":"[^"]*","title":"[^"]*","slug":"[^"]*"||}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end

